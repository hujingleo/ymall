<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
	<!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"-->
	<!--xmlns:p="http://www.springframework.org/schema/p" xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"-->
	<!--xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"-->
	<!--xmlns:cache="http://www.springframework.org/schema/cache" xmlns:c="http://www.springframework.org/schema/c"-->
	<!--xmlns:aop="http://www.springframework.org/schema/aop"-->
	<!--xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-3.1.xsd -->
<!--http://www.springframework.org/schema/util classpath:org/springframework/beans/factory/xml/spring-util-3.1.xsd -->
<!--http://www.springframework.org/schema/cache classpath:org/springframework/cache/config/spring-cache-3.1.xsd-->
<!--http://mybatis.org/schema/mybatis-spring classpath:org/mybatis/spring/config/mybatis-spring-1.2.xsd -->
<!--http://www.springframework.org/schema/tx classpath:org/springframework/transaction/config/spring-tx-3.1.xsd -->
<!--http://www.springframework.org/schema/context classpath:org/springframework/context/config/spring-context-3.1.xsd-->
<!--http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">-->
	<!--&lt;!&ndash; Root Context: defines shared resources visible to all other web components &ndash;&gt;-->
	<!--<context:property-placeholder-->
		<!--ignore-unresolvable="true" local-override="true"-->
		<!--location="classpath:application.properties" />-->
	<!--<aop:aspectj-autoproxy proxy-target-class="true" />-->
 <!--<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">-->
 	<!--<property name="targetConnectionFactory" ref="targetConnectionFactory"/>  -->
 <!--</bean>-->

 <!--<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">  -->
    <!--<property name="brokerURL" value="tcp://localhost:61616"/>  -->
<!--</bean>  -->
<!--<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">  -->
    <!--&lt;!&ndash; 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 &ndash;&gt;  -->
    <!--<property name="connectionFactory" ref="connectionFactory"/>  -->
<!--</bean> -->
 <!---->
	<!--<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"-->
		<!--destroy-method="close">-->
		<!--&lt;!&ndash; Connection Info &ndash;&gt;-->
		<!--<property name="driverClassName" value="${jdbc.driver}" />-->
		<!--<property name="url" value="${jdbc.url}" />-->
		<!--<property name="username" value="${jdbc.username}" />-->
		<!--<property name="password" value="${jdbc.password}" />-->

		<!--&lt;!&ndash; Connection Pooling Info &ndash;&gt;-->
		<!--<property name="initialSize" value="${dbcp.initialSize}" />-->
		<!--<property name="maxActive" value="${dbcp.maxActive}" />-->
		<!--<property name="maxIdle" value="${dbcp.maxIdle}" />-->
		<!--<property name="defaultAutoCommit" value="false" />-->
		<!--&lt;!&ndash; 连接Idle一个小时后超时 &ndash;&gt;-->
		<!--<property name="timeBetweenEvictionRunsMillis" value="3600000" />-->
		<!--<property name="minEvictableIdleTimeMillis" value="3600000" />-->
	<!--</bean>-->
	<!--<bean id="transactionManager"-->
		<!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource" />-->
	<!--</bean>-->
	<!--<tx:annotation-driven />-->
	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
		<!--<property name="dataSource" ref="dataSource" />-->

		<!--<property name="configLocation" value="classpath:/mybatis-config.xml"></property>-->
	<!--</bean>-->
	<!--&lt;!&ndash; 扫描所有的组件 &ndash;&gt;-->

	<!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
		<!--<constructor-arg index="0" ref="sqlSessionFactory" />-->

	<!--</bean>-->


		<!--<context:component-scan base-package="com.youxin.pyq.service" />-->
	<!--<mybatis-spring:scan template-ref="sqlSession"-->
		<!--base-package="com.youxin.pyq.dao" />-->

	<!--&lt;!&ndash; redis配置 &ndash;&gt;-->
	<!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->

		<!--<property name="maxIdle" value="100" />-->
		<!--<property name="maxTotal" value="300" />-->
		<!--<property name="testOnBorrow" value="true" />-->
	<!--</bean>-->
	<!--<bean id="jedisConnFactory"-->
		<!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
		<!--p:use-pool="true">-->
		<!--<property name="usePool" value="true"></property>-->
		<!--<property name="hostName" value="${redis.host}" />-->
		<!--<property name="port" value="${redis.port}" />-->
		<!--<property name="password" value="${redis.pass}" />-->
		<!--<property name="timeout" value="${redis.timeout}" />-->
		<!--<property name="database" value="${redis.default.db}"></property>-->
		<!--<constructor-arg index="0" ref="jedisPoolConfig" />-->
	<!--</bean>-->
	<!--<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"-->
		<!--p:connection-factory-ref="jedisConnFactory"></bean>-->
	<!--<bean class="com.youxin.ymall.cache.RedisCacheBean"></bean>-->
	<!--<bean id="springUtils" class="com.sslkg.utils.SpringUtils"></bean>-->
	<!--&lt;!&ndash; redis template definition &ndash;&gt;-->
	<!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"-->
		<!--p:connection-factory-ref="jedisConnFactoryInstance">-->
		<!--<property name="keySerializer">-->
			<!--<bean-->
				<!--class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
		<!--</property>-->


	<!--</bean>-->
<!--<bean id="jedisPoolConfigInstance" class="redis.clients.jedis.JedisPoolConfig">-->

  <!--<property name="maxIdle" value="100" />-->
  <!--<property name="maxTotal" value="300" />-->
  <!--<property name="testOnBorrow" value="true" />-->
 <!--</bean>-->
 <!--<bean id="jedisConnFactoryInstance"-->
  <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
  <!--p:use-pool="true">-->
  <!--<property name="usePool" value="true"></property>-->
  <!--<property name="hostName" value="${redis.host}" />-->
  <!--<property name="port" value="6379" />-->
  <!--<property name="password" value="${redis.pass}" />-->
  <!--<property name="timeout" value="${redis.timeout}" />-->
  <!--<property name="database" value="${redis.default.db}"></property>-->
  <!--<constructor-arg index="0" ref="jedisPoolConfigInstance" />-->
 <!--</bean>-->
 <!---->
<!--</beans>-->
